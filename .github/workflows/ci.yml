name: CI - Matrix Test & Conditional Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ['*']
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:
    inputs:
      skip_build:
        description: 'Set to "true" to skip build during manual run'
        required: false
        default: 'false'
  schedule:
    - cron: '0 2 * * *' # nightly at 02:00 UTC

jobs:

  # MATRIX TESTS (runs on every push/PR)
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Ensure test-results dir
        run: mkdir -p test-results

      - name: Run tests (Jest) and write JSON
        run: npm test -- --json --outputFile=test-results/results-${{ matrix.node-version }}.json

      - name: Upload test results artifact (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: test-results/results-${{ matrix.node-version }}.json

  # Summary job: download all test artifacts and summarize
  summarize:
    name: Summarize Test Results & Baseline Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout (for baseline & scripts)
        uses: actions/checkout@v4

      - name: Setup Node (for summary script)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Download all test artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results

      - name: Run summarizer
        run: node scripts/summarize.js

      - name: Upload summary artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-results-summary
          path: test-results/summary.json

  # NIGHTLY job (optional): test against latest Node ("node") when schedule triggers
  nightly:
    name: Nightly - Node:current
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node (latest)
        uses: actions/setup-node@v4
        with:
          node-version: 'node'

      - name: Install dependencies
        run: npm ci

      - name: Ensure test-results dir
        run: mkdir -p test-results

      - name: Run tests (nightly)
        run: npm test -- --json --outputFile=test-results/results-nightly.json

      - name: Upload nightly test artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-results-nightly
          path: test-results/results-nightly.json

  # BUILD job (runs only after tests succeed AND on main branch or v*.*.* tags)
  build:
    name: Build (only on main or version tag)
    runs-on: ubuntu-latest
    needs: summarize
    if: >
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) &&
      (github.event_name != 'workflow_dispatch' || github.event.inputs.skip_build != 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/

  # DEPLOY / PUBLISH (manual approval via environment)
  deploy:
    name: Deploy (requires environment approval)
    runs-on: ubuntu-latest
    needs: build
    environment: production   # protect this environment in repo settings to require manual approval
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist

      - name: Publish placeholder
        run: |
          echo "Here you would publish or deploy your dist/ contents."
          ls -la dist
